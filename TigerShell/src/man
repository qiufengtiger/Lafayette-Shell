.TH lsh 1 "29 February, 2019" "1.0" "TigerShell"

.SH NAME
    TigerShell - Lafayette TigerShell

.SH DESCRIPTION
TigerShell is a shell that implements basic shell functions.

.SH SETTING UP
In the project src directory, run the following command:

    |------------------
    | > make shell
    | > ./shellex
    |------------------
    
.SH AUTHOR
zhouj@lafayette.edu, quif @lafayette.edu
    
.SH BUILT-IN COMMANDS


.B = 

Set a environment variable to a given value by saying variableName=value. Remove environment variables by saying variableName=
    |------------------
    | lsh>  A=a
    | success
    | lsh> echo $A
    | a
    |------------------

.B $ 

Substitutes the value of an environment variable into the command line after $. For example, echo $PATH command will print the value of the PATH environment variable. 
    |------------------
    | lsh> echo $A
    | a
    |------------------
.B jobs

The jobs built-in command lists all background and suspended jobs.  For each job, list the job number, process id, a status of Running or Stopped (for suspended jobs) and the command that the job is executing.
    |------------------
    |lsh> jobs
    |JID       PID         status        command
    |  2      2997        STOPPED       ./giveme
    |------------------
	
.B jsum

Reports process statistics on each external command (job) completed since the shell started.
    |------------------
    |lsh> jsum
    |  PID    status        ElapsedTime    Min Fault    Maj Fault    commandName
    |2987        ok             0:00:05            2            0       ./giveme
    |------------------

.B bg

The bg job built-in command restarts job by sending it a SIGCONT signal and then runs it in the background. The job argument can be either a PID or a JID. When calling with JID, we have to use %JID.

.B fg

The fg job built-in command restarts a job by sending it a SIGCONT signal and then runs it in the foreground. The job argument can be either a PID or a JID. When calling with JID, we have to use %JID.
    

.B ^c

Ctrl+C causes the kernel to send a SIGINT signal to your shell, which then forwards it to every process in the foreground process group.

.B ^z

Ctrl+Z causes the kernel to send a SIGTSTP signal to your shell, which then forwards it to every process in the foreground process group.

.SH PIPES

Lsh supports pipes. For example, "ls -l | more"  sends the output of the ls command to the input of more.  This pipeline allows users to page through a directory listing.  However, supporting i/o redirection is not provided.
    |------------------
    |lsh> ls | wc
    |12      12     110 
    |------------------

.SH JOBS CONTROL

Jobs are child processes created directly by the shell.  Each job is identified by either a process ID (PID) or a job ID (JID), which is a small arbitrary positive integer assigned by the shell. JIDs are denoted on the command line by the prefix ‘%’. For example, ‘%5’ denotes JID 5, and ‘5’ denotes PID 5. If the command line ends with an ampersand, then the shell runs the job in the background. Otherwise, the shell runs the job in the foreground. Typing Ctrl+C (Ctrl+Z) causes the kernel to send a SIGINT (SIGTSTP) signal to your shell, which then forwards it to every process in the foreground process group.The shell reaps all of its zombie children. If any job terminates because it receives a signal that was not caught, then the shell prints a message to the terminal with the job’s PID and a description of the offending signal.
	
    |------------------
    |lsh> ./giveme 2
    |I want 2!	
    |I want 2!
    |^Z pid in sig handler: 3162
    |lsh> ./giveme 2 &
    |job added ./giveme
    |lsh> I want 2!
    |I want 2!
    |I want 2!
    |^CI want 2!
    |I want 2!
    |I want 2!
    |------------------

\SH JSUM

This is a detailed process statistics on each external command (job) completed since the shell started. The table includes: 

1:pid for the process

2:status which can be ok for ended with status 0, error for ended with status other than 0, and abort for terminated 

3:by a signal

4:elapsed time since the start of the process (clock time)

5:minor page faults (page faults where the page was reclaimed from the list awaiting reallocation)

6:major page faults (page faults where the page had to be brought in from disk)

7:the command line for the process
    |------------------
    |lsh> jsum
    |  PID    status        ElapsedTime    Min Fault    Maj Fault    commandName
    |2987        ok             0:00:05            2            0       ./giveme
    |------------------



